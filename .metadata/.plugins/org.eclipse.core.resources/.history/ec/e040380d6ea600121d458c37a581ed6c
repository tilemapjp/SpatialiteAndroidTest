package it.ldpgis.android.testapp;

import java.io.File;
import java.io.IOException;

import com.actionbarsherlock.app.SherlockFragment;

import android.app.ProgressDialog;
import android.content.Context;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;

public class MainFragment extends SherlockFragment {

	ProgressDialog wait;

	private static void vDebug(String msg) {
		Log.v("LdpAndroidMap", "[LdpMapFragment] " + msg);
	}
	
	@SuppressWarnings("unused") private static void wDebug(String msg) {
		Log.w("LdpAndroidMap", "[LdpMapFragment] " + msg);
	}
	
	private static void eDebug(String msg) {
		Log.e("LdpAndroidMap", "[LdpMapFragment] " + msg);
	}
	
	@Override
	public void onCreate(Bundle args) {
		super.onCreate(args);
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		
		vDebug("[onCreateView] Function called");
		
		vDebug("[onCreateView] #### Copying application data...");
		try {
		
			AssetHelper.CopyAsset(c,
					c.getFilesDir(),
					getString(R.string.test_db));
		
		} catch (IOException e) {
			eDebug("[onCreateView] Exception while doing CopyAsset(): " + e);
		}
		this.cancelWait();
		vDebug("[onCreateView] #### Data copied");
		
		View view = null;
		try {
   		view = inflater.inflate(R.layout.ldpmapfragment, container, false);
   		RelativeLayout mainLayout = (RelativeLayout) view.findViewById(R.id.ldpmapfragment_layout);
   		
   		MapView map = new LdpMapView(this.getMapContext(),this.getActivity(), this);
   		//MapView map = new MapView(this.getMapContext(), new MapnikTileDownloader());
   		File mapFile = new File(c.getFilesDir() + "/" + c.getString(R.string.siena_map));
   		map.setMapFile(mapFile);
   		//map.setMapFile(new File(Environment.getExternalStorageDirectory().getPath()+ "/arezzo.map"));
   		map.setRenderTheme(new File(c.getFilesDir() + "/" + c.getString(R.string.render_all)));
   		map.setClickable(true);
   		map.setBuiltInZoomControls(true);
   		MapController mapController = map.getController();
   		mapController.setZoom(18);
   		
   		GeoPoint gpoint = new GeoPoint(43.31858,11.333181);
   		map.setCenter(gpoint);
   		
   		mainLayout.addView(map);
		} catch (Exception e) {
			eDebug("[onCreateView] Exception: " + e);
		}
		return view;
	}

	public void showWait(String msg) {
		Context context = this.getActivity();
		this.wait = ProgressDialog.show(context, "",msg, true);
	}

	public void cancelWait() {
		this.wait.cancel();
	}

}
